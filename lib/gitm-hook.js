#!/usr/bin/env node
"use strict";const{program:e}=require("commander"),o=require("shelljs"),{options:s,args:i}=require("./conf/hook"),{error:n,success:r,getCurrent:t,getBranchsFromID:c,isGitProject:l}=require("./js/index"),{createArgs:g}=require("./js/tools"),{init:p,remove:a,getIsMergedBranch:u,getIsUpdatedInTime:d,getIsMergeAction:f,getBehandLogs:m}=require("./js/hook/index");l()||(o.echo(n("当前目录不是git项目目录")),o.exit(1));const h=require("./js/getConfig")();e.name("gitm hook").usage("[command]").description("git hook钩子"),i.length>0&&e.arguments(g(i)),s.forEach((o=>{e.option(o.flags,o.description,o.defaultValue)})),e.action((async(e,s,i)=>{if(console.log("gitmars hooks is running"),i.noVerify)o.exit(0);else{if("init"===e)p();else if("remove"===e)a();else{const e=i.type?i.type.split(","):[],s=[h.master,h.develop,h.release,h.support,h.bugfix],l=t();if(console.log(e,process.env,process.argv,c("2080d17e")),l!==h.develop&&s.includes(l)&&e.includes("1")){const[e,s]=process.env.GIT_REFLOG_ACTION?process.env.GIT_REFLOG_ACTION.split(" "):[];if("merge"===e){u(s,h.develop)?console.info(r(s+"合并过"+h.develop)):(console.info(n("检测到你的分支没有合并过"+h.develop)),o.exit(0))}}if(s.includes(l)&&e.includes("2")){const[e,s]=process.env.GIT_REFLOG_ACTION?process.env.GIT_REFLOG_ACTION.split(" "):[],t=s.split("/")[0];if("merge"===e){d({latest:i.latest,branch:s})?console.info(r(s+"一周内同步过主干分支代码")):(console.info(n("检测到你1周内没有同步过主干"+t+"分支代码")),o.exit(0))}}if(s.includes(l)&&e.includes("3")){f()?console.info(r("最后一条记录是merge记录")):(console.info(n("检测到你直接在主干分支修改代码")),o.exit(0))}if(s.includes(l)&&e.includes("4")){m().length?console.info(r("本地版本没有落后远程，可直接push")):(console.info("你本地分支版本落后于远程分支，请先执行pull"),o.exit(0))}}o.exit(0)}})),e.parse(process.argv);
