#!/usr/bin/env node
"use strict";const{program:e}=require("commander"),o=require("shelljs"),{options:s,args:i}=require("./conf/hook"),{error:n,warning:t,success:r,getCurrent:c,getBranchsFromID:l,isGitProject:p}=require("./js/index"),{createArgs:g}=require("./js/tools"),{init:a,remove:u,getIsMergedBranch:d,getIsUpdatedInTime:f,getIsMergeAction:m,getBehandLogs:h,getAheadLogs:v}=require("./js/hook/index");p()||(o.echo(n("当前目录不是git项目目录")),o.exit(1));const I=require("./js/getConfig")();e.name("gitm hook").usage("[command]").description("git hook钩子"),i.length>0&&e.arguments(g(i)),s.forEach((o=>{e.option(o.flags,o.description,o.defaultValue)})),e.action((async(e,s,i)=>{if(console.log("gitmars hooks is running"),i.noVerify)o.exit(0);else{if("init"===e)a();else if("remove"===e)u();else{i.type=i.type?i.type.split(","):[];const e=[I.master,I.develop,I.release,I.support,I.bugfix],s=c();if(s.split("/")[0],console.log(i.type,process.env,process.argv,l("2080d17e")),s!==I.develop&&e.includes(s)&&i.type.includes("1")){const[e,s]=process.env.GIT_REFLOG_ACTION?process.env.GIT_REFLOG_ACTION.split(" "):[];if("merge"===e){d(s,I.develop)?console.info(r(s+"合并过"+I.develop)):(console.info(n("检测到你的分支没有合并过"+I.develop)),o.exit(0))}}if(e.includes(s)&&i.type.includes("2")){const[e,s]=process.env.GIT_REFLOG_ACTION?process.env.GIT_REFLOG_ACTION.split(" "):[],t=s.split("/")[0];if("merge"===e){f({latest:i.latest,branch:s})?console.info(r(s+"一周内同步过主干分支代码")):(console.info(n("检测到你1周内没有同步过主干"+t+"分支代码")),o.exit(0))}}if(e.includes(s)&&i.type.includes("3")){m()?console.info(r("最后一条记录是merge记录")):(console.info(n("检测到你直接在主干分支修改代码")),o.exit(0))}if(e.includes(s)&&i.type.includes("4")){h().length?console.info(r("本地版本没有落后远程，可直接push")):(console.info("你本地分支版本落后于远程分支，请先执行pull"),o.exit(0))}}o.exit(0)}})),e.parse(process.argv);
