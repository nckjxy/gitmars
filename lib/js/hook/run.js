const{spawnSync}=require("child_process");const checkGitDirEnv=require("../checkGitDirEnv");const config=require("../getConfig")();function getCommand(cwd,hookName){return config&&config.hooks&&config.hooks[hookName]}function runCommand(cwd,hookName,cmd,env){console.info(`gitmars > ${hookName} (node ${process.version})`);const{status}=spawnSync("sh",["-c",cmd],{cwd:cwd,env:Object.assign(Object.assign({},process.env),env),stdio:"inherit"});if(status!==0){const noVerifyMessage=["commit-msg","pre-commit","pre-rebase","pre-push"].includes(hookName)?"(add --no-verify to bypass)":"(cannot be bypassed with --no-verify due to Git specs)";console.info(`gitmars > ${hookName} hook failed ${noVerifyMessage}`)}if(status===127){return 1}return status||0}function start([,,hookName="",...GITMARS_GIT_PARAMS],{cwd=process.cwd()}={}){const command=getCommand(cwd,hookName);const env={};if(GITMARS_GIT_PARAMS===null||GITMARS_GIT_PARAMS===void 0?void 0:GITMARS_GIT_PARAMS.length){env.GITMARS_GIT_PARAMS=GITMARS_GIT_PARAMS.join(" ")}if(command){return runCommand(cwd,hookName,command,env)}return 0}module.exports=async function run(){checkGitDirEnv();try{const status=await start(process.argv);process.exit(status)}catch(err){console.info("Gitmars > 未知错误！请联系吴峰",err);process.exit(1)}};