"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("fs"),t=require("path"),r=require("shelljs"),o=require("slash");function i(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var n=i(e),s=i(t),a=i(r),u=i(o);function l(e=process.cwd()){const t=a.default.exec("git rev-parse --show-toplevel --show-prefix --git-common-dir --absolute-git-dir --show-cdup",{silent:!0}).stdout.replace(/[\s]*$/g,""),[r,o,i,n,s=""]=t.split("\n").map((e=>e.trim())).map(u.default);return{prefix:o||".",gitCommonDir:i,root:r,gitDir:n,gitHookDir:n+"/hooks",cdup:s}}function c(e){if(!e){let{root:t}=l();e=t}const t=s.default.resolve(e,"package.json"),r=n.default.readFileSync(t,"utf-8");return JSON.parse(r)}const{gitUrl:p}=function(e=process.cwd()){const t=a.default.exec("git config --local --get remote.origin.url",{silent:!0}).stdout.replace(/[\s]*$/g,""),[r]=t.split("\n").map((e=>e.trim())).map(u.default);return{gitUrl:r,appName:r.replace(/^[\s\S]+\/([a-z0-9A-Z-_]+)\.git$/,"$1")}}(),{root:f}=l();function d(){const{author:e,homepage:t,version:r}=c();return`# Created by gitmars v${r} (${t})\n# author: ${e}\n# At: ${(new Date).toLocaleString()}\n# From: ${f} (${p})`}exports.default=function(){const e=c(),t=n.default.readFileSync(s.default.join(__dirname,"../../sh/gitmars.sh"),"utf-8").replace('gitmarsVersion="0.0.0"',`gitmarsVersion="${e.version}"`);return[d(),"",t].join("\n")};
