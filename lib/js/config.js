"use strict";var e=Object.defineProperty,r=Object.getOwnPropertySymbols,t=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable,o=(r,t,l)=>t in r?e(r,t,{enumerable:!0,configurable:!0,writable:!0,value:l}):r[t]=l,a=(e,a)=>{for(var n in a||(a={}))t.call(a,n)&&o(e,n,a[n]);if(r)for(var n of r(a))l.call(a,n)&&o(e,n,a[n]);return e};"undefined"!=typeof require&&require;const n=require("shelljs"),{defaults:i}=require("./global"),c=require("./gitRevParse"),s=require("./configFrom"),{root:u}=c();module.exports=(()=>{let e={};if(1===s){const r=n.cat(u+"/.gitmarsrc").stdout.replace(/(^\n*)|(\n*$)/g,"").replace(/\n{2,}/g,"\n").replace(/\r/g,"").replace(/[^\S\x0a\x0d]/g,"");let t=[];r&&(t=r.split("\n")),t.forEach((r=>{r.replace(/^([a-zA-Z0-9]+)\=([\s\S]+)$/,((r,t,l)=>(e[t]=l||null,"")))}))}else 2===s&&(e=require(u+"/gitmarsconfig.json"));return a(a({},i),e)})();
