"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("shelljs"),t=require("slash");function r(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var s=r(e),o=r(t);const a={master:"master",develop:"dev",release:"release",bugfix:"bug",support:"support",user:"",email:"",msgTemplate:"${message}；项目：${project}；路径：${pwd}",msgUrl:"",apolloConfig:"",hooks:"",api:"",gitHost:"",gitID:""};function i(e=process.cwd()){const t=s.default.exec("git rev-parse --show-toplevel --show-prefix --git-common-dir --absolute-git-dir --show-cdup",{silent:!0}).stdout.replace(/[\s]*$/g,""),[r,a,i,l,p=""]=t.split("\n").map((e=>e.trim())).map(o.default);return{prefix:a||".",gitCommonDir:i,root:r,gitDir:l,gitHookDir:l+"/hooks",cdup:p}}const{root:l}=i();var p=s.default.test("-f",l+"/.gitmarsrc")?1:s.default.test("-f",l+"/gitmarsconfig.json")?2:0;const{root:u}=i();var c=(()=>{let e={};if(1===p){let t=s.default.cat(u+"/.gitmarsrc").stdout.replace(/(^\n*)|(\n*$)/g,"").replace(/\n{2,}/g,"\n").replace(/\r/g,"").replace(/[^\S\x0a\x0d]/g,""),r=[];t&&(r=t.split("\n")),r.forEach((t=>{t.replace(/^([a-zA-Z0-9]+)\=([\s\S]+)$/,((t,r,s)=>{e[r]=s||null}))}))}else 2===p&&(e=require(u+"/gitmarsconfig.json"));return{...a,...e}})();exports.default=c;
