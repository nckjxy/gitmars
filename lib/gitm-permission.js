#!/usr/bin/env node
"use strict";var e=require("commander"),t=require("shelljs"),s=require("fs"),r=require("colors"),i=require("slash"),o=require("cosmiconfig");function a(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var n=a(t),l=a(s),c=a(r),u=a(i);const p={master:"master",develop:"dev",release:"release",bugfix:"bug",support:"support",user:"",email:"",msgTemplate:"${message}；项目：${project}；路径：${pwd}",msgUrl:"",apolloConfig:"",hooks:"",api:"",gitHost:"",gitID:""};const g=function(e,t="gitmars"){let s;if(!e){let{root:t}=function(e=process.cwd()){const t=n.default.exec("git rev-parse --show-toplevel --show-prefix --git-common-dir --absolute-git-dir --show-cdup",{silent:!0}).stdout.replace(/[\s]*$/g,""),[s,r,i,o,a=""]=t.split("\n").map((e=>e.trim())).map(u.default);return{prefix:r||".",gitCommonDir:i,root:s,gitDir:o,gitHookDir:o+"/hooks",cdup:a}}();try{e=t+"/gitmarsconfig.json",s=l.default.statSync(e)}catch(s){e=t}}const r={skipCI:!0},i=o.cosmiconfigSync(t);if(s||(s=l.default.statSync(e)),s.isDirectory()){const{config:t={},filepath:s=""}=i.search(e)||{};return Object.assign({},p,r,t,{filepath:s})}{const{config:t={},filepath:s=""}=i.load(e)||{};return Object.assign({},p,r,t,{filepath:s})}}();e.program.name("gitm permission").usage("[message]").arguments("[message]").description("校验提交权限").option("--no-verify","是否需要跳过校验权限",!1).option("--dev","是否限制dev提交",!1).option("--release","是否限制release提交",!1).action(((e,t)=>{console.log("gitm permission is running");const s=n.default.exec("git symbolic-ref --short -q HEAD",{silent:!0}).stdout.replace(/[\n\s]*$/g,"");let r,i=[g.master],o=n.default.exec("git show",{silent:!0}).stdout;var a;t.dev&&i.push(g.develop),t.release&&i.push(g.release),r=i.indexOf(s),r>-1&&!t.noVerify&&o&&-1===o.indexOf("Merge:")&&-1===o.indexOf("Merge branch")?(n.default.echo((a=`${i[r]}分支不允许直接提交`,c.default.red(a))),n.default.exit(1)):n.default.exit(0)})),e.program.parse(process.argv);
