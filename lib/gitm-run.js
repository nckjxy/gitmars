#!/usr/bin/env node
"use strict";var e=require("commander"),o=require("fs");require("colors");var r=require("child_process"),s=require("shelljs"),t=require("slash"),i=require("cosmiconfig");function n(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var c=n(o),a=n(s),p=n(t);const u=[{required:!1,name:"command",variadic:!1},{required:!1,name:"args",variadic:!0}],l=[];function g(...e){["1","true"].includes(process.env.HUSKY_DEBUG||"")&&console.info("gitmars:debug",...e)}const f={master:"master",develop:"dev",release:"release",bugfix:"bug",support:"support",user:"",email:"",msgTemplate:"${message}；项目：${project}；路径：${pwd}",msgUrl:"",apolloConfig:"",hooks:"",api:"",gitHost:"",gitID:""};const m=function(e,o="gitmars"){let r;if(!e){let{root:o}=function(e=process.cwd()){const o=a.default.exec("git rev-parse --show-toplevel --show-prefix --git-common-dir --absolute-git-dir --show-cdup",{silent:!0}).stdout.replace(/[\s]*$/g,""),[r,s,t,i,n=""]=o.split("\n").map((e=>e.trim())).map(p.default);return{prefix:s||".",gitCommonDir:t,root:r,gitDir:i,gitHookDir:i+"/hooks",cdup:n}}();try{e=o+"/gitmarsconfig.json",r=c.default.statSync(e)}catch(r){e=o}}const s={skipCI:!0},t=i.cosmiconfigSync(o);if(r||(r=c.default.statSync(e)),r.isDirectory()){const{config:o={},filepath:r=""}=t.search(e)||{};return Object.assign({},f,s,o,{filepath:r})}{const{config:o={},filepath:r=""}=t.load(e)||{};return Object.assign({},f,s,o,{filepath:r})}}();function d([,,e="",...o],{cwd:s=process.cwd()}={}){const t=function(e,o){return m&&m.hooks&&m.hooks[o]}(0,e),i={};return(null==o?void 0:o.length)&&(i.GITMARS_GIT_PARAMS=o.join(" ")),t?function(e,o,s,t){console.info(`gitmars > ${o} (node ${process.version})`);const{status:i}=r.spawnSync("sh",["-c",s],{cwd:e,env:Object.assign(Object.assign({},process.env),t),stdio:"inherit"});if(0!==i){const e=["commit-msg","pre-commit","pre-rebase","pre-push"].includes(o)?"(add --no-verify to bypass)":"(cannot be bypassed with --no-verify due to Git specs)";console.info(`gitmars > ${o} hook failed ${e}`)}return 127===i?1:i||0}(s,e,t,i):0}async function h(){process.env.GIT_DIR&&(g(`GIT_DIR 环境变量值为：${process.env.GIT_DIR}`),g('如果提示"fatal: not a git repository"，请检查 GIT_DIR 的值'));try{const e=await d(process.argv);process.exit(e)}catch(e){console.info("Gitmars > 未知错误！请联系吴峰",e),process.exit(1)}}e.program.name("gitm run").usage("[command]").description("git钩子运行指令"),u.length>0&&e.program.arguments(function(e){let o=[];return e.forEach((e=>{let r=e.name;e.variadic&&(r+="..."),r=e.required?"<"+r+">":"["+r+"]",o.push(r)})),o.join(" ")}(u)),l.forEach((o=>{e.program.option(o.flags,o.description,o.defaultValue)})),e.program.action(((e,o,r)=>{h()})),e.program.parse(process.argv);
