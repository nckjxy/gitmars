#!/usr/bin/env node
"use strict";"undefined"!=typeof require&&require;const{program:e}=require("commander"),r=require("shelljs"),{options:t,args:i}=require("./conf/get"),{error:n,queue:s,getCurrent:o,getStashList:a,warning:c,isGitProject:g}=require("./js/index"),{createArgs:u}=require("./js/tools");g()||(r.echo(n("当前目录不是git项目目录")),r.exit(1)),e.name("gitm get").usage("[message] [index]").description("恢复暂存区文件"),i.length>0&&e.arguments(u(i)),t.forEach((r=>{e.option(r.flags,r.description,r.defaultValue)})),e.action(((e,t,i)=>{return n=void 0,g=null,u=function*(){e||(e=o());const n=yield a(e);0===n.length&&r.echo(c("该分支没有暂存任何文件！")),void 0===t&&n.length>1&&r.echo(c(`该分支下有${n.length}条暂存记录，默认恢复最近的一条记录`)),n.length>2&&r.echo(c(`该分支下有${n.length}条暂存记录，建议定期清理不必要的暂存记录！`)),s([{cmd:`git stash ${i.keep?"apply":"pop"} ${n[t||0].key}`,config:{again:!i.keep&&`git stash drop ${n[t||0].key}`,success:"文件恢复成功",fail:"恢复失败，请检查冲突"}}])},new Promise(((e,r)=>{var t=e=>{try{s(u.next(e))}catch(e){r(e)}},i=e=>{try{s(u.throw(e))}catch(e){r(e)}},s=r=>r.done?e(r.value):Promise.resolve(r.value).then(t,i);s((u=u.apply(n,g)).next())}));var n,g,u})),e.parse(process.argv);
