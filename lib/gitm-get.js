#!/usr/bin/env node
"use strict";"undefined"!=typeof require&&require;const{program:e}=require("commander"),t=require("shelljs"),{options:r,args:i}=require("./conf/get"),{error:s,queue:n,getCurrent:o,getStashList:a,warning:g,isGitProject:c}=require("./js/index"),{createArgs:u}=require("./js/tools");c()||(t.echo(s("当前目录不是git项目目录")),t.exit(1)),e.name("gitm get").usage("[message] [index]").description("恢复暂存区文件"),i.length>0&&e.arguments(u(i)),r.forEach((t=>{e.option(t.flags,t.description,t.defaultValue)})),e.action(((e,r,i)=>{return s=void 0,c=null,u=function*(){e||(e=o());const s=yield a(e);0===s.length&&(t.echo(g("该分支没有暂存任何文件！")),t.exit(0)),void 0===r&&s.length>1&&t.echo(g(`该分支下有${s.length}条暂存记录，默认恢复最近的一条记录`)),s.length>2&&t.echo(g(`该分支下有${s.length}条暂存记录，建议定期清理不必要的暂存记录！`)),n([{cmd:`git stash ${i.keep?"apply":"pop"} ${s[r||0].key}`,config:{again:!i.keep&&`git stash drop ${s[r||0].key}`,success:"文件恢复成功",fail:"恢复失败，请检查冲突"}},"git reset -q HEAD -- ."])},new Promise(((e,t)=>{var r=e=>{try{n(u.next(e))}catch(e){t(e)}},i=e=>{try{n(u.throw(e))}catch(e){t(e)}},n=t=>t.done?e(t.value):Promise.resolve(t.value).then(r,i);n((u=u.apply(s,c)).next())}));var s,c,u})),e.parse(process.argv);
