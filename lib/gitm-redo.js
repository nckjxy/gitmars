#!/usr/bin/env node
const program=require("commander");const inquirer=require("inquirer");const sh=require("shelljs");const{options,args}=require("./conf/redo");const{warning,queue}=require("./js/index");const{createArgs}=require("./js/tools");program.name("gitm redo").usage("[commitid...] [-b --branch [branch]] [-m --mode [mode]]").description("撤销一次提交记录");if(args.length>0)program.arguments(createArgs(args));options.forEach(o=>{program.option(o.flags,o.description,o.defaultValue)});program.action(async(commitid,opt)=>{let cmd=[],m="";if(opt.mode)m=" -m "+Math.abs(Number(opt.mode));if(opt.branch){const keys=["%H","%aI","%an"];const results=sh.exec(`git log --merges --grep="'${opt.branch}'" --date-order --pretty=format:"${keys.join(",=")}-end-"`,{silent:true}).stdout.replace(/[\r\n]+/g,"").replace(/-end-$/,"");let logList=[],logs=logList.map(log=>log["%H"]);results&&results.split("-end-").forEach(log=>{let args2=log.split(",="),map={};keys.forEach((key,i)=>{map[key]=args2[i]});logList.push(map)});logList.reverse();if(logList.length>1){const prompt={type:"checkbox",message:"检测到存在多条记录，请选择要撤销的项",name:"commitIDs",choices:[]};logList.forEach(log=>{prompt.choices.push({name:`${log["%an"]}\u64CD\u4F5C\u4E8E\uFF1A${log["%aI"]}`,value:log["%H"],checked:true})});const{commitIDs}=await inquirer.prompt(prompt);logs=commitIDs}logs.forEach(log=>{cmd.push({cmd:`git revert ${log}${m}`,config:{slient:false,again:true,success:"撤销成功",fail:"出错了，请根据提示处理"}})})}else if(commitid){cmd.push({cmd:`git revert ${commitid}${m}`,config:{slient:false,again:true,success:"撤销成功",fail:"出错了，请根据提示处理"}})}else{sh.echo(warning("指令不合法"));sh.exit(1)}queue(cmd)});program.parse(process.argv);