#!/usr/bin/env node
"use strict";const{program:e}=require("commander"),r=require("inquirer"),s=require("shelljs"),{options:t,args:i}=require("./conf/redo"),{error:a,warning:c,queue:o,isGitProject:n}=require("./js/index"),{createArgs:m}=require("./js/tools");n()||(s.echo(a("当前目录不是git项目目录")),s.exit(1)),e.name("gitm redo").usage("[commitid...] [-b --branch [branch]] [-m --mode [mode]]").description("撤销一次提交记录"),i.length>0&&e.arguments(m(i)),t.forEach((r=>{e.option(r.flags,r.description,r.defaultValue)})),e.action((async(e,t)=>{let i=[],a="";if(t.mode&&(a=" -m "+Math.abs(Number(t.mode))),t.branch){const e=["%H","%aI","%an"],c=s.exec(`git log --merges --grep="'${t.branch}'" --date-order --pretty=format:"${e.join(",=")}-end-"`,{silent:!0}).stdout.replace(/[\r\n]+/g,"").replace(/-end-$/,"");let o=[],n=o.map((e=>e["%H"]));if(c&&c.split("-end-").forEach((r=>{let s=r.split(",="),t={};e.forEach(((e,r)=>{t[e]=s[r]})),o.push(t)})),o.reverse(),o.length>1){const e={type:"checkbox",message:"检测到存在多条记录，请选择要撤销的项",name:"commitIDs",choices:[]};o.forEach((r=>{e.choices.push({name:`${r["%an"]}操作于：${r["%aI"]}`,value:r["%H"],checked:!0})}));const{commitIDs:s}=await r.prompt(e);n=s}n.forEach((e=>{i.push({cmd:`git revert ${e}${a}`,config:{slient:!1,again:!0,success:"撤销成功",fail:"出错了，请根据提示处理"}})}))}else e?i.push({cmd:`git revert ${e}${a}`,config:{slient:!1,again:!0,success:"撤销成功",fail:"出错了，请根据提示处理"}}):(s.echo(c("指令不合法")),s.exit(1));o(i)})),e.parse(process.argv);
