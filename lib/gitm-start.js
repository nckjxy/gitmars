#!/usr/bin/env node
const program=require("commander");const sh=require("shelljs");const{options,args}=require("./conf/start");const{error,success,queue,getStatus,isGitProject}=require("./js/index");const{createArgs}=require("./js/tools");if(!isGitProject()){sh.echo(error("当前目录不是git项目目录"));sh.exit(1)}const config=require("./js/getConfig")();program.name("gitm start").usage("<type> <name>").description("创建bugfix任务分支、创建feature功能开发分支、support框架支持分支");if(args.length>0)program.arguments(createArgs(args));options.forEach(o=>{program.option(o.flags,o.description,o.defaultValue)});program.action((type,name)=>{const opts=["bugfix","feature","support"];let status=getStatus();if(!status)sh.exit(1);if(opts.includes(type)){let base=type==="bugfix"?config.bugfix:type==="support"?config.master:config.release,cmd=[`git fetch`,`git checkout ${base}`,`git pull`,`git checkout -b ${type}/${name} ${base}`];queue(cmd).then(data=>{if(data[3].code===0){sh.echo(`${name}\u5206\u652F\u521B\u5EFA\u6210\u529F\uFF0C\u8BE5\u5206\u652F\u57FA\u4E8E${base}\u521B\u5EFA\uFF0C\u60A8\u5F53\u524D\u5DF2\u7ECF\u5207\u6362\u5230${type}/${name}
\u5982\u679C\u9700\u8981\u63D0\u6D4B\uFF0C\u8BF7\u6267\u884C${success("gitm combine "+type+" "+name)}
\u5F00\u53D1\u5B8C\u6210\u540E\uFF0C\u8BB0\u5F97\u6267\u884C: ${success("gitm end "+type+" "+name)}`)}})}else{sh.echo(error("type只允许输入："+JSON.stringify(opts)));sh.exit(1)}});program.parse(process.argv);